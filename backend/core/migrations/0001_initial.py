# Generated by Django 4.2.4 on 2024-03-04 00:57

import core.models
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates that this user has all permissions without"
                            " explicitly assigning them."
                        ),
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text=(
                            "Designates whether the user can log into this admin site."
                        ),
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text=(
                            "Designates whether this user should be treated as active."
                            " Unselect this instead of deleting accounts."
                        ),
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text=(
                            "The groups this user belongs to. A user will get all"
                            " permissions granted to each of their groups."
                        ),
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Center",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=200)),
                ("address", models.CharField(default="", max_length=200)),
                (
                    "center_type",
                    models.CharField(
                        choices=[
                            ("detox", "Detox"),
                            (
                                "clinical stabilization services",
                                "Clinical Stabilization Services",
                            ),
                            (
                                "transitional support services",
                                "Transitional Support Services",
                            ),
                            ("residential", "Residential"),
                        ],
                        default="residential",
                        max_length=200,
                    ),
                ),
                ("image", models.ImageField(blank=True, upload_to="centers/images/")),
                ("phone_number", models.CharField(default="", max_length=200)),
                ("website", models.CharField(default="", max_length=200)),
                (
                    "eligible_sexes",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[("male", "Male"), ("female", "Female")],
                            max_length=200,
                        ),
                        default=core.models.get_eligible_sex_default,
                        size=None,
                    ),
                ),
                ("eligible_age_minimum", models.IntegerField(default=1)),
                ("eligible_age_maximum", models.IntegerField(default=9999)),
                (
                    "eligible_medications",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        default=core.models.get_eligible_medications_default,
                        size=None,
                    ),
                ),
                (
                    "eligible_mental_health_diagnoses",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        default=core.models.get_eligible_mental_health_diagnoses_default,
                        size=None,
                    ),
                ),
                (
                    "eligible_health_insurances",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200),
                        default=core.models.get_eligible_health_insurances_default,
                        size=None,
                    ),
                ),
                ("is_disability_compatible", models.BooleanField(default=True)),
                ("is_faith_based_treatment", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ClientProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="client_profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProviderProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="provider_profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
